{"version":3,"sources":["App.js","components/Result/index.js","reportWebVitals.js","index.js","components/FoldersTree.js","utils/utils.js","components/SolidModal/index.js","components/Item/Item.js","components/ItemList.js"],"names":["auth","require","fc","getCurrentSession","a","currentSession","session","App","useState","selectedFiles","setSelectedFiles","open","setOpen","errorArr","setErrorArr","noErrorArr","setNoErrorArr","selectedTab","setSelectedTab","undefined","webId","setWebId","isModalOpen","setModalOpen","isLoadFromLocal","setLoadFromLocal","userName","setUserName","distance","setDistance","getUserName","fetchDocument","profileDoc","profile","getSubject","name","getString","foaf","getRootUrl","split","slice","join","handleLogin","popupLogin","popupUri","handleUpdateUserInfo","handleLogout","logout","handleGetCurrentSession","cachedSession","useEffect","className","style","zIndex","color","marginRight","variant","onClick","selectedIndex","onSelect","number","type","rootUrl","modalClose","modalConfirm","url","readFile","blob","substring","lastIndexOf","length","file","File","mimetype","includes","htmlFor","id","width","value","onChange","d","target","endAdornment","position","aria-describedby","inputProps","display","multiple","event","files","labelId","marginLeft","data","FormData","index","append","axios","post","then","res","errorFiles","map","e","Blob","Buffer","from","filename","detection","info","noErrorFiles","catch","error","editName","list","onDelete","splice","listFileError","listFileNoError","saveFileToSolid","urlUpload","charAt","forEach","createFile","handlerSaveFile","zip","JSZip","errFolders","folder","generateAsync","content","FileSaver","saveAs","Result","props","ResultItem","title","fileList","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","useStyles","makeStyles","theme","treeViewRoot","textAlign","maxWidth","fileNodeRoot","backgroundColor","margin","spacing","FoldersTree","component","classes","foldersTreeItems","firstLayer","onSelectNode","isFolder","formattedUrl","endsWith","reverse","formatURL","treeItem","TreeItem","nodeId","label","children","child","root","TreeView","defaultCollapseIcon","defaultExpandIcon","onNodeSelect","FC","getFileStructure","itemExists","readFolder","links","LINKS","EXCLUDE","folderData","console","getFoldersForUrl","fileStructure","Promise","all","folders","access","treeNode","customStyles","top","left","right","bottom","transform","SolidModal","foldersTree","setFoldersTree","setUrl","isError","setError","snackBarOpen","setSnackBarOpen","message","setMessage","updateFoldersTreeForUrl","log","ariaHideApp","isOpen","onRequestClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","Button","maxW","head","CircularProgress","Item","isZoom","setZoom","imageName","setImageName","modalFileName","setModalFileName","isOpenModal","setIsOpenModal","reader","FileReader","readAsDataURL","onloadend","result","InputLabel","Input","Object","defineProperty","writable","IconButton","aria-label","BorderColor","delete","RemoveCircle","Controlled","isZoomed","onZoomChange","zoom","alt","src","size","ItemList"],"mappings":"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","file":"static/js/main.732b1e8f.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Input,\r\n  Backdrop,\r\n  CircularProgress,\r\n  InputLabel,\r\n  InputAdornment,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { PlayArrow, RestoreFromTrash } from \"@material-ui/icons\";\r\nimport ItemList from \"./components/ItemList\";\r\nimport Result from \"./components/Result/index\";\r\nimport { fetchDocument } from \"tripledoc\";\r\nimport { foaf } from \"rdf-namespaces\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nimport { SolidModal } from \"./components/SolidModal/index\";\r\nconst auth = require(\"solid-auth-client\");\r\nconst FC = require(\"solid-file-client\");\r\nconst fc = new FC(auth);\r\n\r\nasync function getCurrentSession() {\r\n  let session = await auth.currentSession();\r\n  return session;\r\n}\r\n\r\nfunction App() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [errorArr, setErrorArr] = useState([]);\r\n  const [noErrorArr, setNoErrorArr] = useState([]);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [webId, setWebId] = useState(undefined);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [isLoadFromLocal, setLoadFromLocal] = useState(true);\r\n  const [userName, setUserName] = useState(undefined);\r\n  const [distance, setDistance] = useState(1);\r\n\r\n  const onChangeHandler = (event) => {\r\n    setSelectedFiles([...selectedFiles, ...event.target.files]);\r\n  };\r\n  const getUserName = async (webId) => {\r\n    const profileDoc = await fetchDocument(webId);\r\n    const profile = profileDoc.getSubject(webId);\r\n    const name = profile.getString(foaf.name);\r\n    return name;\r\n  };\r\n  const getRootUrl = (webId) => webId && webId.split(\"/\").slice(0, 3).join(\"/\");\r\n\r\n  const handleLogin = async () => {\r\n    const session = await auth.popupLogin({ popupUri: \"popup.html\" });\r\n\r\n    if (session?.webId) {\r\n      setWebId(session.webId);\r\n    }\r\n  };\r\n\r\n  const handleUpdateUserInfo = async (webId) => {\r\n    const name = await getUserName(webId);\r\n    setUserName(name);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    setWebId(undefined);\r\n  };\r\n\r\n  const handleGetCurrentSession = async () => {\r\n    const cachedSession = await getCurrentSession();\r\n\r\n    if (cachedSession) {\r\n      setWebId(cachedSession.webId);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleGetCurrentSession();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (webId) {\r\n      handleUpdateUserInfo(webId);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [webId]);\r\n\r\n  const onClickHandler = () => {\r\n    const data = new FormData();\r\n    setErrorArr([]);\r\n    setNoErrorArr([]);\r\n    for (let index = 0; index < selectedFiles.length; index++) {\r\n      data.append(\"file\", selectedFiles[index]);\r\n    }\r\n    setOpen(true);\r\n    setSelectedTab(1);\r\n    axios\r\n      .post(`https://168.62.170.209/upfile?distance=${distance}`, data, {})\r\n      .then((res) => {\r\n        const { noErrorArr, errorArr } = res.data;\r\n        const errorFiles = errorArr.map((e) => {\r\n          const file = new File(\r\n            [new Blob([Buffer.from(e.file.data)])],\r\n            e.filename\r\n          );\r\n          file.mimetype = e.type;\r\n          file.detection = `Number of detected components: ${e.info[1]}`;\r\n          return file;\r\n        });\r\n        const noErrorFiles = noErrorArr.map((e) => {\r\n          const file = new File(\r\n            [new Blob([Buffer.from(e.file.data)])],\r\n            e.filename\r\n          );\r\n          file.mimetype = e.type;\r\n          file.detection = `Number of detected components: ${e.info[1]}`;\r\n          return file;\r\n        });\r\n        setNoErrorArr([...noErrorFiles]);\r\n        setErrorArr([...errorFiles]);\r\n      })\r\n      .catch((error) => {\r\n        setSelectedTab(0);\r\n      })\r\n      .then(() => {\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return auth.logout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Backdrop style={{ zIndex: 9999 }} open={open}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <div>\r\n        {webId ? (\r\n          <div>\r\n            <div className=\"nav-info\">\r\n              <Typography style={{ marginRight: \"20px\" }} color=\"secondary\">\r\n                Welcome back, {userName}\r\n              </Typography>\r\n              <Button\r\n                className=\"nav-name\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={handleLogout}\r\n              >\r\n                Logout\r\n              </Button>\r\n            </div>\r\n\r\n            <Tabs\r\n              selectedIndex={selectedTab}\r\n              onSelect={(number) => setSelectedTab(number)}\r\n            >\r\n              <TabList>\r\n                <Tab>Input</Tab>\r\n                <Tab>Output</Tab>\r\n              </TabList>\r\n\r\n              <TabPanel>\r\n                <div className=\"nav\">\r\n                  <SolidModal\r\n                    type=\"file\"\r\n                    rootUrl={getRootUrl(webId)}\r\n                    isModalOpen={isModalOpen}\r\n                    modalClose={() => setModalOpen(false)}\r\n                    modalConfirm={async (url) => {\r\n                      const blob = await fc.readFile(url);\r\n                      const name = url.substring(\r\n                        url.lastIndexOf(\"/\") + 1,\r\n                        url.length\r\n                      );\r\n                      const file = new File([blob], name);\r\n                      file.mimetype = blob.type.includes(\"octet-stream\")\r\n                        ? \"image/png\"\r\n                        : blob.type;\r\n                      setSelectedFiles([...selectedFiles, file]);\r\n                    }}\r\n                  />\r\n                  <InputLabel\r\n                    className=\"nav-e\"\r\n                    htmlFor=\"standard-adornment-amount\"\r\n                  >\r\n                    Distance\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"standard-adornment-weight\"\r\n                    className=\"nav-e\"\r\n                    style={{ width: \"70px\" }}\r\n                    value={distance}\r\n                    onChange={(d) => setDistance(d.target.value)}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">mm</InputAdornment>\r\n                    }\r\n                    aria-describedby=\"standard-weight-helper-text\"\r\n                    inputProps={{\r\n                      \"aria-label\": \"weight\",\r\n                    }}\r\n                  />{\" \"}\r\n                  <input\r\n                    className=\"nav-e\"\r\n                    type=\"file\"\r\n                    id=\"file\"\r\n                    name=\"file\"\r\n                    style={{ display: \"none\" }}\r\n                    multiple\r\n                    onChange={onChangeHandler}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => setModalOpen(!isLoadFromLocal)}\r\n                  >\r\n                    {isLoadFromLocal ? (\r\n                      <label htmlFor=\"file\">Load File From Local</label>\r\n                    ) : (\r\n                      \"Load File From Solid\"\r\n                    )}\r\n                  </Button>\r\n                  <Select\r\n                    className=\"select-store-file nav-e\"\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={\"\"}\r\n                    onChange={(event) => {\r\n                      setLoadFromLocal(event.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem value={false}>Load File From Solid</MenuItem>\r\n                    <MenuItem value={true}>Load File From Local</MenuItem>\r\n                  </Select>\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-block\"\r\n                    onClick={() => setSelectedFiles([])}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Clear <RestoreFromTrash />\r\n                  </Button>\r\n                  <Button\r\n                    style={{ marginRight: \"10px\", marginLeft: \"auto\" }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-success btn-block\"\r\n                    onClick={onClickHandler}\r\n                  >\r\n                    Run <PlayArrow />\r\n                  </Button>\r\n                </div>\r\n\r\n                <div className=\"body\">\r\n                  <ItemList\r\n                    editName={false}\r\n                    list={selectedFiles}\r\n                    onDelete={(index) => {\r\n                      selectedFiles.splice(index, 1);\r\n                      setSelectedFiles([...selectedFiles]);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <Result\r\n                  rootUrl={getRootUrl(webId)}\r\n                  listFileError={errorArr}\r\n                  listFileNoError={noErrorArr}\r\n                />\r\n              </TabPanel>\r\n            </Tabs>\r\n          </div>\r\n        ) : (\r\n          <div className=\"nav-login\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\r\n              Login to continue\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ItemList from \"../ItemList\";\r\nimport \"./index.css\";\r\nimport React, { useState } from \"react\";\r\nimport FileSaver from \"file-saver\";\r\nimport JSZip from \"jszip\";\r\nimport { SolidModal } from \"../SolidModal/index\";\r\nimport { Button, Typography } from \"@material-ui/core\";\r\nconst auth = require(\"solid-auth-client\");\r\nconst FC = require(\"solid-file-client\");\r\nconst fc = new FC(auth);\r\n\r\nconst saveFileToSolid = async (files, url) => {\r\n  const urlUpload = `${url}${url.charAt(url.length - 1) === \"/\" ? \"\" : \"/\"}`;\r\n  files.forEach(async (file) => {\r\n    await fc.createFile(\r\n      `${urlUpload + file.name}`,\r\n      file,\r\n      file.mimetype.includes(\"octet-stream\") ? \"image/png\" : file.mimetype\r\n    );\r\n  });\r\n};\r\n\r\nconst handlerSaveFile = async (files) => {\r\n  const zip = new JSZip();\r\n  const errFolders = zip.folder(\"images\");\r\n  files.forEach((data) => {\r\n    errFolders.file(data.name, data, {\r\n      type: \"blob\",\r\n    });\r\n  });\r\n  const content = await zip.generateAsync({ type: \"blob\" });\r\n  FileSaver.saveAs(content, `output.zip`);\r\n};\r\n\r\nexport default function Result(props) {\r\n  return (\r\n    <div className=\"rs\">\r\n      <ResultItem\r\n        title=\"NO ERROR\"\r\n        fileList={props.listFileNoError}\r\n        rootUrl={props.rootUrl}\r\n      />\r\n      <ResultItem\r\n        title=\"ERROR\"\r\n        fileList={props.listFileError}\r\n        rootUrl={props.rootUrl}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ResultItem(props) {\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const { fileList, rootUrl } = props;\r\n\r\n  return (\r\n    <div className=\"rs-list\">\r\n      <div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Typography color=\"secondary\">{props.title}</Typography>\r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <SolidModal\r\n            type=\"folder\"\r\n            rootUrl={rootUrl}\r\n            isModalOpen={isModalOpen}\r\n            modalClose={() => setModalOpen(false)}\r\n            modalConfirm={(url) => {\r\n              saveFileToSolid(fileList, url);\r\n            }}\r\n          />\r\n          <Button\r\n            className=\"nav-btn\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handlerSaveFile(fileList)}\r\n          >\r\n            Download\r\n            {/* <Archive /> */}\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"nav-btn\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setModalOpen(true)}\r\n          >\r\n            Upload To Solid\r\n            {/* <CloudDownload /> */}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <ItemList list={fileList} editName={true} />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\r\n\r\nconst formatURL = (url) => {\r\n\tif (url.endsWith(\"/\")) {\r\n\t\treturn url.split(\"/\").reverse()[1];\r\n\t} else {\r\n\t\treturn url.split(\"/\").reverse()[0];\r\n\t}\r\n};\r\n\r\n\r\nconst FoldersTree = (props) => {\r\n\tconst classes = useStyles(props);\r\n\tconst { foldersTreeItems, firstLayer = true, onSelectNode } = props;\r\n\tconst wrapInRoot = (component) => {\r\n\t\treturn (\r\n\t\t\t<TreeView\r\n\t\t\t\tclassName={classes.treeViewRoot}\r\n\t\t\t\tdefaultCollapseIcon={<ExpandMoreIcon />}\r\n\t\t\t\tdefaultExpandIcon={<ChevronRightIcon />}\r\n\t\t\t\tonNodeSelect={onSelectNode}\r\n\t\t\t>\r\n\t\t\t\t{component}\r\n\t\t\t</TreeView>\r\n\t\t);\r\n    };\r\n    \r\n\tif (!foldersTreeItems) {\r\n\t\treturn null;\r\n\t} else {\r\n\t\tconst { url } = foldersTreeItems;\r\n\t\tconst isFolder = foldersTreeItems.type === \"folder\";\r\n\t\tconst formattedUrl = firstLayer ? url : formatURL(url);\r\n\r\n\t\tconst treeItem = isFolder ? (\r\n\t\t\t<TreeItem nodeId={url} label={formattedUrl} key={url}>\r\n\t\t\t\t{(foldersTreeItems).children.map((child) => (\r\n\t\t\t\t\t<FoldersTree onSelectNode={onSelectNode} foldersTreeItems={child} firstLayer={false} />\r\n\t\t\t\t))}\r\n\t\t\t</TreeItem>\r\n\t\t) : (\r\n\t\t\t<TreeItem\r\n\t\t\t\tnodeId={url}\r\n\t\t\t\tlabel={formattedUrl}\r\n\t\t\t\tkey={url}\r\n\t\t\t\tclasses={{ root: classes.fileNodeRoot }}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn firstLayer ? wrapInRoot(treeItem) : treeItem;\r\n\t}\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttreeViewRoot: {\r\n\t\tcolor: \"#FF4234\",\r\n\t\ttextAlign: \"left\",\r\n\t\tmaxWidth: 500,\r\n\t},\r\n\tfileNodeRoot: {\r\n\t\tcolor: \"#333\",\r\n\t\tbackgroundColor: \"#6F6\",\r\n\t\tmargin: theme.spacing(0.5),\r\n\t},\r\n}));\r\n\r\nexport default FoldersTree;\r\n","const auth = require(\"solid-auth-client\");\r\nconst FC = require(\"solid-file-client\");\r\nconst fc = new FC(auth);\r\n\r\nexport const getFileStructure = async (url) => {\r\n  try {\r\n    if (await fc.itemExists(url)) {\r\n      const folderData = await fc.readFolder(url, {\r\n        links: FC.LINKS.EXCLUDE,\r\n      });\r\n      return folderData;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const getFoldersForUrl = async (url) => {\r\n  const fileStructure = await getFileStructure(url);\r\n\r\n  const treeNode = {\r\n    type: \"folder\",\r\n    access: \"public\",\r\n    url,\r\n    children: [\r\n      ...(await Promise.all(\r\n        fileStructure?.folders.map((folder) => getFoldersForUrl(folder.url))\r\n      )),\r\n      ...fileStructure?.files.map((file) => ({\r\n        type: \"file\",\r\n        access: \"public\",\r\n        url: file.url,\r\n      })),\r\n    ],\r\n  };\r\n  return treeNode;\r\n};\r\n\r\n","import FoldersTree from \"../FoldersTree\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Modal from \"react-modal\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { CircularProgress, Snackbar } from \"@material-ui/core\";\r\nimport { getFoldersForUrl } from \"../../utils/utils\";\r\nimport \"./index.css\";\r\nconst auth = require(\"solid-auth-client\");\r\nconst FC = require(\"solid-file-client\");\r\nconst fc = new FC(auth);\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nexport function SolidModal(props) {\r\n  const [foldersTree, setFoldersTree] = useState();\r\n  const [url, setUrl] = useState();\r\n  const [open, setOpen] = useState();\r\n  const [isError, setError] = useState(false);\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const updateFoldersTreeForUrl = async (url) => {\r\n    const folder = await getFoldersForUrl(url);\r\n    setFoldersTree(folder);\r\n  };\r\n  useEffect(() => {\r\n    updateFoldersTreeForUrl(props.rootUrl);\r\n    console.log(props.type);\r\n    setMessage(\r\n      `You should choose a ${props.type === \"file\" ? \"file\" : \"folder!\"}`\r\n    );\r\n  }, []); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        ariaHideApp={false}\r\n        style={customStyles}\r\n        isOpen={props.isModalOpen}\r\n        onRequestClose={() => props.modalClose()}\r\n      >\r\n        <div className=\"solid-modal\">\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n            open={snackBarOpen}\r\n            autoHideDuration={2000}\r\n            onClose={() => setSnackBarOpen(false)}\r\n          >\r\n            <Alert severity={isError && isError ? \"error\" : \"success\"}>\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <div className=\"solid-modal-tree\">\r\n            <FoldersTree\r\n              foldersTreeItems={foldersTree}\r\n              onSelectNode={(event, url) => {\r\n                setUrl(url);\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            className=\"solid-button-confirm\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            maxW\r\n            onClick={async () => {\r\n              if (!url) {\r\n                setError(true);\r\n                setSnackBarOpen(true);\r\n                return;\r\n              }\r\n\r\n              const res = await fc.head(url);\r\n              const type =\r\n                res.url.charAt(res.url.length - 1) === \"/\" ? \"folder\" : \"file\";\r\n\r\n              if (props.type !== type) {\r\n                setError(true);\r\n                setSnackBarOpen(true);\r\n                return;\r\n              }\r\n\r\n              setOpen(true);\r\n              props.modalConfirm(url);\r\n              updateFoldersTreeForUrl(props.rootUrl).then(() => {\r\n                setOpen(false);\r\n                setError(false);\r\n                setMessage(\"Success\");\r\n                setSnackBarOpen(true);\r\n              });\r\n            }}\r\n          >\r\n            {open ? <CircularProgress color=\"inherit\" /> : \"CONFIRM\"}\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Item.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Controlled as ControlledZoom } from \"react-medium-image-zoom\";\r\nimport Modal from \"react-modal\";\r\nimport { Input, InputLabel, InputAdornment } from \"@material-ui/core\";\r\nimport \"react-medium-image-zoom/dist/styles.css\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { IconButton, CircularProgress } from \"@material-ui/core\";\r\nimport { RemoveCircle, BorderColor } from \"@material-ui/icons\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nexport default function Item(props) {\r\n  const [url, setUrl] = useState(null);\r\n  const [isZoom, setZoom] = useState(false);\r\n  const [imageName, setImageName] = useState(\"\");\r\n  const [modalFileName, setModalFileName] = useState(\"\");\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n  var file = props.file;\r\n\r\n  var reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n  reader.onloadend = function (e) {\r\n    setUrl(reader.result);\r\n    setImageName(file.name);\r\n  };\r\n\r\n  const renameFile = (name) => {\r\n    Object.defineProperty(file, \"name\", {\r\n      writable: true,\r\n      value: name,\r\n    });\r\n    Object.defineProperty(file, \"originalname\", {\r\n      writable: true,\r\n      value: name,\r\n    });\r\n    console.log(file);\r\n    setImageName(name);\r\n    setModalFileName(name);\r\n    setIsOpenModal(false);\r\n  };\r\n\r\n  return url !== null ? (\r\n    <div className=\"u-item\">\r\n      <Modal\r\n        style={customStyles}\r\n        ariaHideApp={false}\r\n        isOpen={isOpenModal}\r\n        onRequestClose={() => {\r\n          setModalFileName(imageName);\r\n          setIsOpenModal(false);\r\n        }}\r\n      >\r\n        <InputLabel className=\"nav-e\" htmlFor=\"modalFileName\">\r\n          Name\r\n        </InputLabel>\r\n\r\n        <Input\r\n          id=\"modalFileName\"\r\n          className=\"nav-e\"\r\n          style={{ width: \"200px\" }}\r\n          value={modalFileName}\r\n          onChange={(d) => {\r\n            setModalFileName(d.target.value);\r\n          }}\r\n          aria-describedby=\"standard-weight-helper-text\"\r\n          inputProps={{\r\n            \"aria-label\": \"Name\",\r\n          }}\r\n        />\r\n        <Button\r\n          className=\"nav-name\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => renameFile(modalFileName)}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Modal>\r\n      <div className=\"u-edit\">\r\n        {props.editName === true ? (\r\n          <div className=\"u-edit-button\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n              onClick={() => {\r\n                setModalFileName(imageName);\r\n                setIsOpenModal(true);\r\n              }}\r\n            >\r\n              <BorderColor />\r\n            </IconButton>\r\n          </div>\r\n        ) : (\r\n          <div />\r\n        )}\r\n        {props.delete ? (\r\n          <div className=\"u-edit-button\">\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n              onClick={() => props.onDelete()}\r\n            >\r\n              <RemoveCircle />\r\n            </IconButton>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n      {/* ) : (\r\n        <div></div>\r\n      )} */}\r\n      {/* <div className=\"u-edit\">\r\n        \r\n      </div> */}\r\n      <div>\r\n        <ControlledZoom\r\n          isZoomed={isZoom}\r\n          onZoomChange={(zoom) => setZoom(zoom)}\r\n        >\r\n          {/* ${isZoom ? 'u-img-zoom' : '' */}\r\n          <div className=\"u-zoom\">\r\n            <img className=\"u-img\" alt=\"\" src={url}></img>\r\n            <div className=\"u-title\">Name: {imageName}</div>\r\n            {file.detection ? (\r\n              <div className=\"u-title\">{file.detection}</div>\r\n            ) : (\r\n              <div />\r\n            )}\r\n          </div>\r\n        </ControlledZoom>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"progress\">\r\n      <CircularProgress size=\"100px\" color=\"secondary\" />\r\n    </div>\r\n  );\r\n}\r\n","import Item from \"./Item/Item\";\r\nimport \"./Item/Item.css\";\r\nexport default function ItemList(props) {\r\n  return (\r\n    <div className=\"u-container\">\r\n      {props.list.map((e, index) => (\r\n        <Item\r\n          key={`${index}`}\r\n          file={e}\r\n          onDelete={() => props.onDelete(index)}\r\n          delete={props.onDelete!==undefined}\r\n          editName={props.editName}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}